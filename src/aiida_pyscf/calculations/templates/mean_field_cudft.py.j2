from pyscf import scf

mean_field = scf.{{ mean_field.method | default('UKS') }}(structure)
{% if mean_field.xc is defined %}mean_field.xc = {{ mean_field.xc }}{% endif %}
{% if mean_field.grids is defined %}mean_field.grids.level = {{ mean_field.grids['level'] | default(3) }}{% endif %}

from cudft.cuda_factory import CUDAFactory,CUDAParams
import multiprocessing

multiprocessing.set_start_method('forkserver', force=True)
cuda_parameters = CUDAParams()
factory = CUDAFactory()
{% if cuda %}{% for key, value in cuda.items() %}
cuda_parameters.{{key}} = {{ value }}
{% endfor %}{% endif %}
mean_field = factory.generate_cuda_instance(mean_field, cuda_parameters)

time_mean_field_start = time.perf_counter()
mean_field_run = mean_field.run()

results['timings']['mean_field'] = time.perf_counter() - time_mean_field_start
results['total_energy'] = mean_field_run.e_tot
results['forces'] = (- mean_field_run.nuc_grad_method().kernel()).tolist()
